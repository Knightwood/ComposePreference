[versions]
kotlin_version = "1.9.0"
gradle_plugin_version = "8.2.0"

###########################谷歌官方库，例如AndroidX系列，material组件库，room库，导航库，布局库等#########################
androidx_core = "1.12.0"
appcompat = "1.6.1"
fragment-ktx = "1.6.1"
activity-ktx = "1.8.2"

google_material = "1.11.0"
androidx_constraintLayout = "2.1.4"
androidx_preference = "1.2.0"
androidx-recyclerview = "1.2.1"
#导航
nav_version = "2.7.4"
#datastore
datastore-version = "1.0.0"

#lifecycle
lifecycle_version = "2.7.0"
arch_version = "2.2.0"

androidx_collection = "1.3.0"
#room
room_version = "2.6.1"
#hilt
hilt_plugin = "2.44"
hiltAndroidCompiler = "2.46"
hiltAndroid = "2.46"
#测试
junit = "4.13.2"
androidx-test-ext-junit = "1.1.5"
espresso-core = "3.5.1"
#work
androidx_work = "2.8.1"
#kotlin
kotlin_coroutines ="1.7.3"
#网络
okhttp_ver="4.11.0"
retrofit2_core = "2.9.0"
retrofit2_converter_scalars = "2.6.2"
retrofit2_converter_kotlin = "1.0.0"
retrofit2_interceptor_logging = "4.2.0"

##################################################其他依赖的版本#########################################


[libraries]
############################################## Kotlin Gradle插件依赖库 ##################################################
kotlin-gradlePlugin = { module = "org.jetbrains.kotlin:kotlin-gradle-plugin", version.ref = "kotlin_version" }

################################################### gradle插件依赖库 ##################################################
android-gradlePlugin = { module = "com.android.tools.build:gradle", version.ref = "gradle_plugin_version" }

########################## 谷歌官方库，例如AndroidX系列，material组件库，room库，导航库，布局库等 #########################
#AndroidX核心库
androidx-appCompat = { module = "androidx.appcompat:appcompat", version.ref = "appcompat" }
androidx-core-ktx = { module = "androidx.core:core-ktx", version.ref = "androidx_core" }
androidx-fragment-ktx = { module = "androidx.fragment:fragment-ktx", version.ref = "fragment-ktx" }
androidx-activity-ktx = { module = "androidx.activity:activity-ktx", version.ref = "activity-ktx" }

############################ 测试 ###########################
junit = { group = "junit", name = "junit", version.ref = "junit" }
androidx-test-ext-junit = { group = "androidx.test.ext", name = "junit", version.ref = "androidx-test-ext-junit" }
espresso-core = { group = "androidx.test.espresso", name = "espresso-core", version.ref = "espresso-core" }

############################ hilt ###########################
google-hilt-android-compiler = { module = "com.google.dagger:hilt-android-compiler", version.ref = "hiltAndroidCompiler" }
google-hilt-android = { module = "com.google.dagger:hilt-android", version.ref = "hiltAndroid" }

############################ 布局组件库 ###########################
google-material = { module = "com.google.android.material:material", version.ref = "google_material" }
androidx-constraintLayout = { module = "androidx.constraintlayout:constraintlayout", version.ref = "androidx_constraintLayout" }
androidx-preference = { module = "androidx.preference:preference-ktx", version.ref = "androidx_preference" }
androidx-recyclerview = { module = "androidx.recyclerview:recyclerview", version.ref = "androidx-recyclerview" }

########################### 导航依赖库 ################################
androidx-navigation-runtime-ktx = { module = "androidx.navigation:navigation-runtime-ktx", version.ref = "nav_version" }
androidx-navigation-fragment-ktx = { module = "androidx.navigation:navigation-fragment-ktx", version.ref = "nav_version" }
androidx-navigation-ui-ktx = { module = "androidx.navigation:navigation-ui-ktx", version.ref = "nav_version" }
androidx-navigation-dynamic-feature-fragment = { module = "androidx.navigation:navigation-dynamic-features-fragment", version.ref = "nav_version" }

########################### Datastore依赖库 ################################
# Preferences DataStore（可以直接使用）
androidx-datastore-preferences = { module = "androidx.datastore:datastore-preferences", version.ref = "datastore-version" }
# Preferences DataStore （没有Android依赖项，包含仅适用于 Kotlin 的核心 API）
androidx-datastore-preferences-core = { module = "androidx.datastore:datastore-preferences-core", version.ref = "datastore-version" }
# Typed DataStore （Proto DataStore）
androidx-datastore = { module = "androidx.datastore:datastore", version.ref = "datastore-version" }
# Typed DataStore （没有Android依赖项，包含仅适用于 Kotlin 的核心 API）
androidx-datastore-core = { module = "androidx.datastore:datastore-core", version.ref = "datastore-version" }

########################### Lifecycle依赖库 ################################
# ViewModel
lifecycle-viewmodel-ktx = { module = "androidx.lifecycle:lifecycle-viewmodel-ktx", version.ref = "lifecycle_version" }
# LiveData
lifecycle-livedata-ktx = { module = "androidx.lifecycle:lifecycle-livedata-ktx", version.ref = "lifecycle_version" }
# Lifecycles only = { module =without ViewModel or LiveData}
lifecycle-runtime-ktx = { module = "androidx.lifecycle:lifecycle-runtime-ktx", version.ref = "lifecycle_version" }
# Saved state module for ViewModel
lifecycle-viewmodel-savedstate = { module = "androidx.lifecycle:lifecycle-viewmodel-savedstate", version.ref = "lifecycle_version" }
# Annotation processor
# alternately - if using Java8, use the following instead of lifecycle-compiler
lifecycle-common-java8 = { module = "androidx.lifecycle:lifecycle-common-java8", version.ref = "lifecycle_version" }
# optional - helpers for implementing LifecycleOwner in a Service
lifecycle-service = { module = "androidx.lifecycle:lifecycle-service", version.ref = "lifecycle_version" }
# optional - ProcessLifecycleOwner provides a lifecycle for the whole application process
lifecycle-process = { module = "androidx.lifecycle:lifecycle-process", version.ref = "lifecycle_version" }
# optional - ReactiveStreams support for LiveData
lifecycle-reactivestreams-ktx = { module = "androidx.lifecycle:lifecycle-reactivestreams-ktx", version.ref = "lifecycle_version" }
# optional - Test helpers for LiveData
androidx-arch-core-testing = { module = "androidx.arch.core:core-testing", version.ref = "arch_version" }
# optional - Test helpers for Lifecycle runtime
lifecycle-runtime-testing = { module = "androidx.lifecycle:lifecycle-runtime-testing", version.ref = "lifecycle_version" }

#collection库,fragment库已经引入
androidx-collection = { module = "androidx.collection:collection-ktx", version.ref = "androidx_collection" }

############################ room ###########################
androidx-room-runtime = { module = "androidx.room:room-runtime", version.ref = "room_version" }
androidx-room-compiler = { module = "androidx.room:room-compiler", version.ref = "room_version" }
androidx-room-ktx = { module = "androidx.room:room-ktx", version.ref = "room_version" }
androidx-room-testing = { module = "androidx.room:room-testing", version.ref = "room_version" }
androidx-room-paging = { module = "androidx.room:room-paging", version.ref = "room_version" }


############################ work ###########################
androidx-work-runtime-ktx = { module = "androidx.work:work-runtime-ktx", version.ref = "androidx_work" }

################################## kotlin依赖 #########################################
kotlin-serialization-kotlin190 = { module = "org.jetbrains.kotlinx:kotlinx-serialization-json", version = "1.6.0-RC" }
kotlin-coroutines-core = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "kotlin_coroutines" }
kotlin-coroutines-android = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-android", version.ref = "kotlin_coroutines" }

################################## 网络 #########################################
okhttp-core = { module = "com.squareup.okhttp3:okhttp", version.ref = "okhttp_ver" }
retrofit2-core = { module = "com.squareup.retrofit2:retrofit", version.ref = "retrofit2_core" }
retrofit2-interceptor-logging = { module = "com.squareup.okhttp3:logging-interceptor", version.ref = "retrofit2_interceptor_logging" }
retrofit2-converter-scalars = { module = "com.squareup.retrofit2:converter-scalars", version.ref = "retrofit2_converter_scalars" }
retrofit2-converter-kotlin = { module = "com.jakewharton.retrofit:retrofit2-kotlinx-serialization-converter", version.ref = "retrofit2_converter_kotlin" }

################################## 其他依赖 #########################################


[plugins]
#application和library插件
android-application = { id = "com.android.application", version.ref = "gradle_plugin_version" }
android-library = { id = "com.android.library", version.ref = "gradle_plugin_version" }
#kotlin支持
kotlin-android = { id = "org.jetbrains.kotlin.android", version.ref = "kotlin_version" }
#hilt
google-hilt-androidPlugin = { id = "com.google.dagger.hilt.android", version.ref = "hilt_plugin" }

##################################内建插件#########################################
# Plugins defined by this project
buildLogic-android-app = { id = "kiylx.build_logic.android.application", version = "unspecified" }
buildLogic-android-library = { id = "kiylx.build_logic.android.library", version = "unspecified" }
buildLogic-android-compose = { id = "kiylx.build_logic.android.compose", version = "unspecified" }
buildLogic-android-empty = { id = "kiylx.build_logic.android.empty", version = "unspecified" }
buildLogic-android-room = { id = "kiylx.build_logic.android.room", version = "unspecified" }
buildLogic-android-hilt = { id = "kiylx.build_logic.android.hilt", version = "unspecified" }

##################################其他插件#########################################
# kotlin序列化插件的版本会跟kotlin编译器同时发布，因此一致
kotlin-serialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin_version" }


[bundles]
bundleAndroidx = [
    "androidx-appCompat", "androidx-core-ktx",
    "androidx-fragment-ktx", "androidx-activity-ktx",
    "lifecycle-runtime-ktx", "lifecycle-viewmodel-ktx",
    "androidx-constraintLayout"
]

dataStore = ["androidx-datastore", "androidx-datastore-preferences"]

kotlins = ["kotlin-coroutines-core", "kotlin-coroutines-android"]

retrofit2 = [
    "retrofit2-core", "retrofit2-converter-scalars", "kotlin-serialization-kotlin190",
    "retrofit2-converter-kotlin", "retrofit2-interceptor-logging"
]